<?php
declare(strict_types=1);

require_once 'vendor/autoload.php';

use PHPUnit\Framework\TestCase;

final class RightTriangleTest extends TestCase
{
  /**
   * @var ShapeInterface $shape Shape
   * @var float $ratio Ratio
   */
  private $shape;
  private $ratio;

  /**
   * Setting up the test
   */
  public function setUp(): void
  {
    parent::setUp(); // TODO: Change the autogenerated stub
    $this->ratio = 2.1234567890123;
    $radius = 3.123;
    $scale=14;
    //Instantiating a shape object
    $this->shape = new Shapes\RightTriangle($scale);
    $cathetus1 = 2.123;
    $cathetus2 = 3.098;
    $this->shape->setCathetus($cathetus1, $cathetus2);
    $this->shape->getPerimeter();
    //$this->shape->resize();
  }

  /**
   * Testing ::getArea()
   * @throws Exception
   */
  public function testGetArea(): void
  {
    $actual = $this->shape->getArea();
    $this->assertEquals(3.288527, $actual);
  }

  /**
   * Testing ::getPerimeter()
   * @throws Exception
   */
  public function testGetPerimeter(): void
  {
    $actual = $this->shape->getPerimeter();
    $this->assertEquals(8.97662684514848, $actual);
  }

  /**
   * Testing ::resize(float $ratio)
   * @throws Exception
   */
  public function testResize(): void
  {
    $this->shape->resize($this->ratio);
    $actualArea = $this->shape->getArea();
    $actualPerimeter = $this->shape->getPerimeter();
    $this->assertEquals(14.8281942792536, $actualArea);
    $this->assertEquals(19.06147921676061, $actualPerimeter);
  }

}